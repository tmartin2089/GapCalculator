//todo:  future- shouldn't matter w/copy and paste but 0 amts f it up


"use strict";
//gathers award information


//gets rid of all extraneous and returns numbers only
function getPaste(){
	var pasted = $('.paste').val().replace(/_/g,' ');
	var split = pasted.split(' ');
	var pastedArray = [];
	for(var x= 0; x< split.length; x++){
		//pushes number values to array/excludes NaN values
		//generated by parseInt	
									// > 10 because award names containing Top 10 bugging
		if(parseInt(split[x]) && (parseInt(split[x]) > 10)){
			pastedArray.push(parseInt(split[x]));
		}
	}
	return pastedArray;
}


function separateType(){
	var getArray = getPaste();
	var type = [];
	for(var x = 0; x< getArray.length; x++){
		if(getArray[x].toString().length === 6){
			type.push(getArray[x])
		};
	};
	//umbrella converts all 331 & 341 scholarships to 15
	for(var y = 0; y < type.length; y++){
		if(type[y].toString().substring(0,3)==="331" || type[y].toString().substring(0,3)==="341"){
			type[y] = 15;
		};
	};
	//ibid all 341 scholarships to 15
	return convertType(type);
}

function separateAmt(){
	var getArray = getPaste();
	var amt = [];
	for(var x = 0; x< getArray.length; x++){
		if(getArray[x].toString().length < 6)
			amt.push(getArray[x]);
	};
	return amt;
}

function convertType(val){
	for(var x= 0; x < val.length; x++){
		switch(val[x]){
		
		//plus
		case 215025:
		case 215026:
		val[x] = 1;
		break;
		
		//unsub
		case 214125:
		case 214126:
		val[x] = 2;
		break;
		
		//cal/alt
		case 222001:
		case 241002:
		val[x] = 3;
		break;
		
		//bot
		case 223001:
		case 223002:
		case 223003:
		case 223004:
		val[x] = 4;
		break;
		
		//perkins
		case 213003:
		val[x] = 5;
		break;
		
		//sub
		case 214025:
		case 214026:
		val[x] = 6;
		break;
		
		//UT grant	
		case 131252:
		case 131253:
		case 131254:
		case 131255:
		case 131256:
		val[x] = 7;
		break;
		
		//PTG
		case 131200:
		case 131201:
		case 131202:
		val[x] = 8;
		break;
		
		//TPEG
		case 131115:
		case 131110:
		case 131116:
		case 131111:
		val[x] = 9;
		break;
		
		//tx grant match
		case 131114:
		val[x] = 10;
		break;
		
		//tx grant
		case 121176:
		case 121178:
		case 121180:
		val[x] = 11;
		break;
		
		//fws
		case 411001:
		val[x] = 12;
		break;
		
		//pell
		case 111028:
		case 111029:
		val[x] = 13;
		break;
		
		//top 10
		case 321380:
		case 321396:
		val[x] = 14;
		break;	
		
		default:
		break;
		}
	};	
	return val;
};


	
	
//final step - creates mega array of aid types	
function aidObject(){
	var getType = separateType();
	var getAmt = separateAmt();
	var typeAmt = [];
	for(var x = 0; x< getType.length; x++){
		typeAmt.push({type:getType[x], amt:getAmt[x]});
	}
	 //filters out any osch codes - counted in st res gift
	 typeAmt = typeAmt.filter(function(loan){
		return loan.type != 342000;
	 })
	return typeAmt;
}

